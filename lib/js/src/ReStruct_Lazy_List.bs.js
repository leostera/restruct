// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var CamlinternalLazy = require("bs-platform/lib/js/camlinternalLazy.js");

function concat(a, b) {
  var tag = a.tag | 0;
  var match = tag === 250 ? a[0] : (
      tag === 246 ? CamlinternalLazy.force_lazy_block(a) : a
    );
  if (match) {
    var aa$prime = match[1];
    var a$prime = match[0];
    return Block.__(246, [(function () {
                  return /* Cons */[
                          a$prime,
                          concat(aa$prime, b)
                        ];
                })]);
  } else {
    return b;
  }
}

function head(param) {
  if (param) {
    return Js_primitive.some(param[0]);
  }
  
}

function tail(param) {
  if (param) {
    return param[1];
  }
  
}

exports.concat = concat;
exports.head = head;
exports.tail = tail;
/* No side effect */
